global
 pidfile		<haproxy.dir.pid>/<pid.name>
 maxconn		4000

defaults

 mode tcp
 retries		3	
 timeout connect  4s
 timeout server  30s
 timeout client  30s
 timeout check	15s

#---------------------------------------------- 
# REDIS FRONTEND MASTER(WRITE/READ)
#---------------------------------------------- 
frontend ft_redis_master
 bind 0.0.0.0:<redis.frontend.master.port> name redis_master
 default_backend bk_redis_master

#---------------------------------------------- 
# REDIS FRONTEND SLAVE(READ ONLY)
#---------------------------------------------- 
frontend ft_redis_slave
 bind 0.0.0.0:<redis.frontend.slave.port> name redis_slave
 default_backend bk_redis_slave
 
#---------------------------------------------- 
# REDIS BACKEND MASTER(WRITE/READ)
#---------------------------------------------- 
backend bk_redis_master
 option tcp-check
 tcp-check send PING\r\n
 tcp-check expect string +PONG
 tcp-check send info\ replication\r\n
 tcp-check expect string role:master
 tcp-check send QUIT\r\n
 tcp-check expect string +OK
 <redis_services>

#---------------------------------------------- 
# REDIS BACKEND SLAVE(READ ONLY)
#---------------------------------------------- 
backend bk_redis_slave
 option tcp-check
 tcp-check send PING\r\n
 tcp-check expect string +PONG
 tcp-check send info\ replication\r\n
 tcp-check expect string role:slave
 tcp-check send QUIT\r\n
 tcp-check expect string +OK
 <redis_services>


#---------------------------------------------- 
# MYSQL FRONTEND MASTER(WRITE/READ)
#---------------------------------------------- 
frontend mysql_write
  mode tcp
  bind 0.0.0.0:<mysql.frontend.master.port>
  default_backend cluster_db_write
#---------------------------------------------- 
# MYSQL FRONTEND SLAVE(READ ONLY)
#---------------------------------------------- 
frontend mysql_read
  mode tcp
  bind 0.0.0.0:<mysql.frontend.slave.port>
  default_backend cluster_db_read
 
#---------------------------------------------- 
# MYSQL BACKEND MASTER(WRITE/READ)
#---------------------------------------------- 
backend cluster_db_write
  mode tcp
  option tcpka
  option mysql-check user <haproxy.user>
  balance roundrobin
  <mysql_write_master>
  <mysql_write_slaves>
 
#---------------------------------------------- 
# MYSQL BACKEND SLAVE(READ ONLY)
#---------------------------------------------- 
backend cluster_db_read
  mode tcp
  option tcpka
  option mysql-check user <haproxy.user>
  balance roundrobin
  <mysql_read_master>
  <mysql_read_slaves>

#---------------------------------------------------------------------
# Http listen port for graphical status
#---------------------------------------------------------------------
listen stats *:8888
       mode http
       option httpclose
       balance roundrobin
       stats uri /
       stats realm Haproxy\ Statistics
       stats auth haproxy:haproxy
